{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/todos/TodoSummary.js","components/todos/TodoList.js","components/dashboard/VoiceForm.js","components/dashboard/Dashboard.js","components/todos/TodoDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/todos/CreateTodo.js","store/actions/todoActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/todoReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","a","getFirebase","firebase","auth","type","console","error","profile","className","to","href","onClick","initials","SignedOutLinks","state","props","links","uid","Notifications","TodoSummary","this","todo","rate","pitch","content","title","authorFirstName","authorLastName","createdAt","id","text","voice","key","moment","toDate","calendar","React","Component","TodoList","todos","length","map","VoiceForm","htmlFor","onChange","name","min","max","defaultValue","step","Dashboard","event","setState","target","value","userId","userTodos","filter","authorId","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","authorlastName","SignIn","email","password","handleChange","handleSubmit","preventDefault","signIn","authError","onSubmit","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","user","set","syncUser","recognition","window","SpeechRecognition","webkitSpeechRecognition","continous","interimResults","lang","CreateTodo","interimTranscript","listening","finalTranscript","toggleListen","handleListen","start","onresult","i","resultIndex","results","transcript","isFinal","document","getElementById","innerHTML","createTodo","history","push","class","style","interim","add","Date","color","border","padding","width","App","exact","path","component","TodoDetails","Boolean","location","hostname","initState","authReducer","action","log","message","todoReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","waitUp"],"mappings":"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","file":"static/js/main.97496952.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = ({ signOut, profile }) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/createtodo\">\n          <i className=\"material-icons left\">add_circle_outline</i>\n          <b>New ToDo</b>\n        </NavLink>\n      </li>\n      <li>\n        <a href=\"/\" onClick={signOut}>\n          <i className=\"material-icons left\">input</i>\n          <b>Log Out</b>\n        </a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating green lighten-1\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return async (dispatch, getState, { getFirebase }) => {\n    try {\n      const firebase = getFirebase();\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(credentials.email, credentials.password);\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    } catch (error) {\n      dispatch({ type: 'LOGIN_ERROR', error });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch, getState, { getFirebase }) => {\n    try {\n      const firebase = getFirebase();\n\n      await firebase.auth().signOut();\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const signUp = newUser => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    try {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n      const response = await firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password);\n\n      const syncUser = async response => {\n        await firestore.collection('users').doc(response.user.uid).set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n      };\n      syncUser(response);\n    } catch (error) {\n      dispatch( { type: 'SIGNUP_ERROR', error })\n    }\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">\n          <i className=\"material-icons left\">account_circle</i>\n          <b>Sign Up</b>\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">\n          <i className=\"material-icons left\">input</i>\n          <b>Log In</b>\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating green lighten-1\">\n          <b>TL</b>\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          <i><b>ChatBacc</b></i><i className=\"material-icons right large\">mic_none</i> \n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react'\n\nexport default function Notifications() {\n  return (\n    <div>\n\n    </div>\n  )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport Speech from 'react-speech';\n\nclass TodoSummary extends React.Component {\n\n  render() {\n    const { todo, rate, pitch} = this.props;\n    const { title, content, authorFirstName, authorLastName, createdAt } = todo;\n\n    return (\n      <div className=\"card z-depth-0 todo-summary \">\n        <div className=\"card-content grey-text text-darken-3 text-center\" id=\"content-card\">\n          <span className=\"card-title \">\n            <div className=\"waves-effect waves-light btn\">\n              Playback{' '}\n              <Speech\n                text={content}\n                voice=\"Google UK English Male\"\n                rate={rate}\n                pitch={pitch}\n              />\n            </div>\n\n          </span>\n          <Link to={`/todos/${todo.id}`} key={todo.id}>\n            <p>{content}</p>\n          </Link>\n          <p>Posted by {`${authorFirstName} ${authorLastName}`}</p>\n          <p className=\"grey-text\">{moment(createdAt.toDate()).calendar()}</p>\n          <button>Delete</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoSummary;\n","import React from 'react';\nimport TodoSummary from './TodoSummary';\n\nconst TodoList = ({ todos, rate, pitch }) => {\n  if (todos && todos.length === 0)\n    return (\n      <div className=\"card-panel\">\n        <p className=\"left-align\">\n          <i>No todos yet, record one in \"New Todo\"</i>\n        </p>\n      </div>\n    );\n\n  return (\n    <div className=\"todo-list section\">\n      {todos &&\n        todos.map(todo => {\n          return (\n            <div>\n            <TodoSummary rate={rate} pitch={pitch} todo={todo} key={todo.id} />\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\n\nclass VoiceForm extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"container text-center mt-4\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mx-auto\">\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"rate\" id=\"rate-pitch\">Rate</label>\n                  <div id=\"rate-value\">{this.props.rate}</div>\n                  <input onChange={this.props.onChange} name=\"rate\" type=\"range\" id=\"rate\" className=\"custom-range\"\n                  min=\"0.5\" max=\"2\" defaultValue=\"1\" step=\"0.5\" />\n                </div>\n{/* PITCH */}\n            <div className=\"form-group\">\n                  <label htmlFor=\"pitch\" id=\"rate-pitch\">Pitch</label>\n                  <div id=\"pitch-value\">{this.props.pitch}</div>\n                  <input onChange={this.props.onChange} name=\"pitch\" type=\"range\" id=\"pitch\" className=\"custom-range\"\n                  min=\"0\" max=\"2\" defaultValue=\"1\" step=\"1\" />\n                </div>\n\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VoiceForm;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport TodoList from '../todos/TodoList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport VoiceForm from './VoiceForm';\n\nclass Dashboard extends Component {\n  state = {\n    content: '',\n    rate: 1,\n    pitch: 1\n  };\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n\n  render() {\n    let { todos, auth } = this.props;\n    const userId = auth.uid;\n    const userTodos = todos\n      ? todos.filter(todo => todo.authorId === userId)\n      : null;\n\n    if (!auth.uid) return <Redirect to=\"signin\" />;\n    return (\n      <div className=\"center-align\">\n        <VoiceForm onChange={this.onChange} rate={this.state.rate} pitch={this.state.pitch}/>\n\n        <div className=\"dashboard container\">\n          <div className=\"row \">\n            <div className=\"col s12 m6\"></div>\n            <TodoList rate={this.state.rate} pitch={this.state.pitch} todos={userTodos} />\n            <div className=\"col s12 m5 offset-m1\">\n              <Notifications />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.firestore.ordered.todos,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'todos' }])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst TodoDetails = props => {\n  const { todo, auth } = props;\n  if (todo) {\n    if (!auth.uid) return <Redirect to=\"signin\" />;\n\n    return (\n      <div className=\"container section audio-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{todo.title}</span>\n            <p>{todo.content}</p>\n          </div>\n          <div className=\"card-action listen-4 grey-text\">\n            <div>\n              Posted by {todo.authorFirstName} {todo.authorlastName}\n            </div>\n            <div>{moment(todo.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Todo..</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todos = state.firestore.data.todos;\n  const todo = todos ? todos[id] : null;\n  return {\n    todo: todo,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'todos' }])\n)(TodoDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink listen-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.signUp(this.state)\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink listen-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTodo } from '../../store/actions/todoActions';\nimport { Redirect } from 'react-router-dom';\n\n// LISTENING FUNCTIONALITY\\\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nclass CreateTodo extends Component {\n  state = {\n    title: '',\n    content: '',\n    interimTranscript: '',\n    listening: false,\n    finalTranscript: ''\n  };\n\n  toggleListen = () => {\n    this.setState(\n      {\n        listening: !this.state.listening\n      },\n      this.handleListen\n    );\n  };\n\n  handleListen = () => {\n    if (this.state.listening) recognition.start();\n\n    let finalTranscript = '';\n    recognition.onresult = event => {\n      let interimTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n        else interimTranscript += transcript;\n      }\n\n      \n      document.getElementById('todo-content').innerHTML = finalTranscript;\n      this.setState({\n        content: finalTranscript,\n        interimTranscript: interimTranscript\n      });\n    };\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.createTodo(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth.uid) return <Redirect to=\"signin\" />;\n\n    return (\n      <div className=\"container\">\n        <button\n          id=\"microphone-btn\"\n          className=\"waves-effect waves-light btn-small mt-4\"\n          onClick={this.toggleListen}\n        >\n          Click me to Record!\n          <i class=\"material-icons right\">mic_none</i>\n        </button>\n        <form className=\"cream\" onSubmit={this.handleSubmit}>\n          {/* <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <textarea\n              type=\"title\"\n              name=\"title\"\n              onChange={this.handleChange}\n              style={interim}\n            />\n          </div> */}\n\n          {/* <div id=\"interim\" style={interim} className=\"input-field mt-5\">\n            {this.state.interimTranscript}\n          </div> */}\n\n          <div className=\"input-field\">\n            <label htmlFor=\"interim\">Interim</label>\n            <textarea\n              name=\"interim\"\n              type=\"interim\"\n              onChange={this.handleChange}\n              id=\"interim\"\n              style={interim}\n            />\n          </div>\n\n\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              name=\"content\"\n              type=\"content\"\n              onChange={this.handleChange}\n              id=\"todo-content\"\n              style={interim}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn waves-effect waves-light btn-large\">Submit!\n            <i class=\"material-icons right\">send</i>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTodo: todo => dispatch(createTodo(todo))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodo);\n\nconst styles = {\n  interim: {\n    color: 'black',\n    border: 'black 1px solid',\n    padding: '1em',\n    width: '300px',\n  }\n};\n\nconst { interim } = styles;\n","export const createTodo = todo => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    // reqact-redux firebsase provides  binding for firebase servives as a whole\n    // redux firestore provides redux bidining for firestore db in particular\n    // allow us to use firrebase api within action creator\n    // thunk is pausing the dispatch\n    // making async call to our DB\n    try {\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n      // ...todo is referencing all the properties within that document\n      await firestore.collection('todos').add({\n        ...todo,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      });\n      dispatch({ type: 'CREATE_TODO', todo: todo });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const deleteTodo = todoId => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    try {\n      // const firestore = getFirestore();\n      console.log(\"todoId\", todoId)\n\n    } catch (error) {\n      dispatch( { type: 'DELETE_ERROR', error })\n    }\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport TodoDetails from './components/todos/TodoDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateTodo from './components/todos/CreateTodo'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/todos/:id\" component={TodoDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/createtodo\" component={CreateTodo} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n};\n\n//Action Creators\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login failed');\n      return {\n        ...state,\n        authError: 'Login failed'\n      };\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        authError: null\n      };\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success')\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log(\"signup success\")\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log(\"signup error\")\n      return {\n        ...state,\n        authError: action.error.message\n      }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","\n\n//Action Creators\nconst todoReducer = (state = {todos: []}, action) => {\n  switch (action.type) {\n    case 'CREATE_TODO':\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import authReducer from './authReducer';\nimport todoReducer from './todoReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todo: todoReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/analytics'\nimport 'firebase/auth'\n\nexport const config = {\n    apiKey: \"AIzaSyDVmd75_Y6GczxcQoc88agEsW5wta3QjgQ\",\n    authDomain: \"speechrecorder-270920.firebaseapp.com\",\n    databaseURL: \"https://speechrecorder-270920.firebaseio.com\",\n    projectId: \"speechrecorder-270920\",\n    storageBucket: \"speechrecorder-270920.appspot.com\",\n    messagingSenderId: \"822671506578\",\n    appId: \"1:822671506578:web:85f5e0ca3f193ce7073a4b\",\n    measurementId: \"G-HGG5JBMTM4\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(config);\n  firebase.analytics();\n  firebase.firestore()\n\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\n// import firebase, { fbConfig } from './config/fbConfig'\nimport fbConfig from './config/fbConfig';\n\n// STORE ENHANCERS\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nconst waitUp = async () => {\n  await store.firebaseAuthIsReady;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n};\nwaitUp();\n\n// store.firebaseAuthIsReady.then(() => {\n//   ReactDOM.render(\n//     <Provider store={store}>\n//       <App />\n//     </Provider>,\n//     document.getElementById('root')\n//   );\n//   serviceWorker.unregister();\n// })\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}